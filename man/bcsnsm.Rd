% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06_fit_functions.R
\name{bcsnsm}
\alias{bcsnsm}
\title{BCS-NSM Fit for Multivariate Positive Data}
\usage{
bcsnsm(
  y,
  margins = "bcno",
  association = c("unstructured", "uniform", "nonassociative"),
  copula = c("gaussian", "t", "slash", "hyp"),
  eta = NULL,
  control = control_fit(...),
  ...
)
}
\arguments{
\item{y}{a matrix with the sample observations.}

\item{margins}{a character or a character vector; specifies the marginal BCS distributions.
If all BCS margins are the same, it is sufficient to enter only one character. A table with
the current available BCS distributions can be seen in \code{\link{bcs}}.}

\item{association}{one of \code{"unstructured"} (default), \code{"uniform"}, or
\code{"nonassociative"}, which specify the association matrix of the model.}

\item{copula}{character; informs which normal scale mixture distribution should be used to generate
the NSM copula. Currently, the copulas available are: Gaussian (\code{"gaussian"}),
Student's \emph{t} (\code{"t"}), slash (\code{"slash"}), and hyperbolic (\code{"hyp"}).}

\item{eta}{possible extra parameter induced by the copula, parameterized to take values at
\code{(0, 1)}. For instance, under the \emph{t} copula, \code{eta} specifies
\code{eta} / (1 - \code{eta}) degrees of freedom. To estimate the value of \code{eta}
via profile log-likelihood, use the function \code{\link{choose_copula}}.}

\item{control}{a list of control arguments specified via \code{\link{control_fit}}.}

\item{...}{further arguments passed to \code{\link{control_fit}}.}
}
\value{
The \code{bcsnsm} function returns an object of class \code{"bcsnsm"},
    which consists of a list with the following components:
\describe{
  \item{mu, sigma, lambda, nu}{vectors with the estimated values for the marginal parameters
      \code{mu}, \code{sigma}, \code{lambda}, and \code{nu}, respectively.}
  \item{gamma}{the estimated parameters of the association matrix, if any.}
  \item{margins}{a character vector with the specified marginal BCS distributions.}
  \item{association}{structure of the association matrix. It can be one of \code{"non-associative"},
      \code{"unstructured"}, or \code{"uniform"}.}
  \item{copula, eta}{\code{"copula"} is a character which informs which normal scale mixture distribution
      was used to generate the NSM copula and \code{"eta"} is the possible extra parameter associated with
      the copula.}
  \item{logLik}{log-likelihood of the fitted model.}
  \item{vcov}{asymptotic covariance matrix of the maximum likelihood estimator of the model parameters vector.
      Specifically, the inverse of the observed information matrix, obtained via numeric Hessian matrix.}
  \item{y}{the response matrix.}
  \item{optim_pars}{control optimization parameters used by \code{\link{control_fit}}.}
  \item{nobs,d}{the number of observations in the sample and the dimension of the response variable, respectively.}
  \item{call}{ the function call.}
 }
}
\description{
Fit a multivariate BCS-NSM distribution via maximum likelihood for positive continuous
    data. Specify the marginal distributions within the class of Box-Cox symmetric (BCS) distributions
    (see \code{\link{bcs}}) and the dependence structure regarding the copula of a normal scale
    mixture distribution (see \code{\link{bcsnsm.dist}}).
}
\examples{
\dontrun{
## Random sampling

### Sample size and dimension
n <- 200
d <- 4

### Association matrix
Gamma <- matrix(0.8, d, d)
diag(Gamma) <- 1

### Marginal specifications

margins <- c("bcno", "lt", "bct", "lno")

mu <- c(19, 20, 15, 20)
sigma <- c(0.2, 0.3, 0.4, 0.3)
lambda <- c(-1, NA, 1.6, NA)
nu <- c(NA, 4, 8, NA)

### Copula
copula <- "t"
eta <- 0.8

### Observations
set.seed(123) # Seed for reproducibility
y <- rbcsnsm(n, mu, sigma, lambda, nu, Gamma, copula, eta, margins)
colnames(y) <- c("y1", "y2", "y3", "y4")

### Visualization (based on graphics::pairs functions)
mvplot(y)

## Fit with Gaussian copula and uniform structure
fit <- bcsnsm(y, association = "uniform", copula = "gaussian",
              margins = c("bcno", "lt", "bct", "lno"))

class(fit)
methods(class = "bcnsm")

# Fit summaries
fit
summary(fit)

# Fit visualization

## Bivariate fit
plot(fit)

## Marginal fit
plot(fit, type = "margins")

## Transformed vectors
plot(fit, "epsilon")

# Choose the value of the extra parameter of the t copula (it can be slow)
fit_t <- choose_copula(fit, grid = 1:8, copula = "t")

## Final fit
final_fit <- fit_t[[4]]

final_fit
plot(final_fit)
plot(final_fit, type = "margins")
}
}
\references{
Vanegas, L. H., and Paula, G. A. (2016). Log-symmetric distributions: statistical properties and
    parameter estimation. \emph{Brazilian Journal of Probability and Statistics}, 30, 196-220.

Ferrari, S. L. P., and Fumes, G. (2017). Box-Cox symmetric distributions and applications to
    nutritional data. \emph{AStA Advances in Statistical Analysis}, 101, 321-344.

Medeiros, R. M. R. de, and Ferrari, S. L. P. (2023). Multivariate Box-Cox symmetric distributions
    generated by a normal scale mixture copula.
}
\author{
Rodrigo M. R. de Medeiros <\email{rodrigo.matheus@live.com}>
}
