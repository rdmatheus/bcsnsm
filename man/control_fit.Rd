% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_control.R
\name{control_fit}
\alias{control_fit}
\title{Control Parameters for Fitting Multivariate BCS-NSM Models}
\usage{
control_fit(method = "BFGS", maxit = 2000, hessian = TRUE, inits = NULL, ...)
}
\arguments{
\item{method}{Optimization method. See “Details” in \code{\link[stats]{optim}}. 
Default is \code{"BFGS"}.}

\item{maxit}{Maximum number of iterations. Default is \code{2000}.}

\item{hessian}{Logical. If \code{TRUE}, the asymptotic covariance matrix (\code{vcov}) 
estimated using the optim's numerical Hessian matrix is returned by the function 
\code{\link{bcsnsm}}.}

\item{inits}{Optional list of initial values for model parameters. It must be passed with the elements: 
\itemize{
  \item{\code{beta}: list of vectors for regression coefficients (one per marginal);}
  \item{\code{sigma}: vector of initial \eqn{\sigma_j};}
  \item{\code{lambda}: vector of \eqn{\lambda_j}, with \code{NA} where not used;}
  \item{\code{nu}: vector of \eqn{\nu_j}, with \code{NA} where not used;}
  \item{\code{gamma}: vector for the association parameters.}
}}

\item{...}{Additional arguments passed to \code{\link[stats]{optim}}.}
}
\value{
A list containing the specified control parameters.
}
\description{
Provides control parameters passed to \code{\link[stats]{optim}} when fitting multivariate 
BCS-NSM regression models via \code{\link{bcsnsm}}. Inspired by \code{\link[betareg]{betareg.control}}, 
this function centralizes the optimization settings for improved usability.
}
\examples{
\donttest{
## Value:
ctrl <- control_fit()
str(ctrl)

## Usage with the bcsnsm() function (simulated example):

# Sample size and number of marginals
n <- 200
d <- 4

### Marginal specifications

# Marginal distributions
margins <- c("bcno", "bct", "lno", "lt")

# Design matrix
X <- matrix(c(rep(1, n), rnorm(n)), ncol = 2)

# Regression coefficients
beta1 <- c(2, 0.2)
beta2 <- c(1.5, -0.9)
beta3 <- c(1, 0.8)
beta4 <- c(-1.5, 0.7)

# Marginal parameters
mu <- cbind(exp(X \%*\% beta1), exp(X \%*\% beta2),
            exp(X \%*\% beta3), exp(X \%*\% beta4))
sigma <- c(0.1, 0.3, 0.4, 0.2)
lambda <- c(-0.6, 1.3, NA, NA)
nu <- c(NA, 8, NA, 6)

### Dependence specifications

# Copula
copula <- "gaussian"

# Association matrix
gamma <- 0.8
Gamma <- matrix(gamma, d, d)
diag(Gamma) <- 1

### Data generation
y <- rbcsnsm(n, mu, sigma, lambda, nu, Gamma, copula, margins = margins)
dt <- data.frame(y1 = y[, 1], y2 = y[, 2], y3 = y[, 3], y4 = y[, 4], x = X[, 2])

### Regression modeling without changing the starting values:
fit1 <- bcsnsm(y1 + y2 + y3 + y4 ~ x | x | x | x, dt, association = "uniform")

### Regression modeling with user-specified starting values:
inits <- list(beta = list(beta1 = beta1, beta2 = beta2, beta3 = beta3, beta4 = beta4),
              sigma = c(0.3, 0.3, 0.3, 0.3),
              lambda = c(0, 0, NA, NA),
              nu = c(NA, 8, NA, 8),
              gamma = 0.5)
  
fit2 <- bcsnsm(y1 + y2 + y3 + y4 ~ x | x | x | x, dt, association = "uniform", inits = inits)

### Compare the starting values used:
fit1$optim_pars$inits
fit2$optim_pars$inits
}
}
\references{
Cribari-Neto, F., and Zeileis, A. (2010). Beta regression in R. 
    \emph{Journal of Statistical Software}, 34(2), 1–24.

Vanegas, L. H., and Paula, G. A. (2016). Log-symmetric distributions: statistical properties and
    parameter estimation. \emph{Brazilian Journal of Probability and Statistics}, 30, 196–220.

Ferrari, S. L. P., and Fumes, G. (2017). Box-Cox symmetric distributions and applications to
    nutritional data. \emph{AStA Advances in Statistical Analysis}, 101, 321–344.

Medeiros, R. M. R. de, and Ferrari, S. L. P. (2024). Multivariate Box-Cox symmetric distributions
    generated by a normal scale mixture copula.
}
\author{
Rodrigo M. R. de Medeiros <\email{rodrigo.matheus@ufrn.br}>
}
